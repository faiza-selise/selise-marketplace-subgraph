type MarketActivity @entity {
  id: ID!
  initiator: Bytes!
  itemId: BigInt
  marketEvent: Int!
  item: MarketItem
}

type MarketSale @entity {
  id: ID!
  initiator: Bytes!
  seller: Bytes!
  itemId: BigInt!
  tokenId: BigInt!
  item: MarketItem
}

type MarketItem @entity{
  id: ID!
  itemId: BigInt
  nftContractAddress: Bytes
  tokenId:BigInt
  card: Card
  seller: Bytes
  owner: Bytes
  price: BigInt
  forSale: Boolean
  startingTime:  BigInt
  isListed: Boolean
  activities: [MarketActivity!]  @derivedFrom(field: "item")
}

enum MarketPlaceEvent{ CREATE_LISTING, CANCEL_LISTING, UPDATE_LISTING, MARKET_SALE }



type MarketplaceCommissionTransaction @entity {
  id: ID!
  initiator: Bytes! # address
  itemId: BigInt! # uint256
  marketEvent: Int! # uint8
  platformFee: BigInt! # uint256
}

type OwnershipTransferred @entity {
  id: ID!
  previousOwner: Bytes! # address
  newOwner: Bytes! # address
}


type UpdatePlatformFee @entity {
  id: ID!
  platformFee: Int! # uint16
}

type UpdatePlatformFeeRecipient @entity {
  id: ID!
  platformFeeRecipient1: Bytes! # address
  platformFeeRecipient2: Bytes! # address
}

type Approval @entity {
  id: ID!
  owner: Bytes! # address
  approved: Bytes! # address
  tokenId: BigInt! # uint256
}

type ApprovalForAll @entity {
  id: ID!
  owner: Bytes! # address
  operator: Bytes! # address
  approved: Boolean! # bool
}

type BurnTokenEvent @entity {
  id: ID!
  sender: Bytes! # address
  tokenId: BigInt! # uint256
}

type MergeCardEvent @entity {
  id: ID!
  tokenId: BigInt! # uint256
  burnedTokenId: [BigInt!] # uint256[]
}

type MintCardEvent @entity {
  id: ID!
  sender: Bytes! # address
  tokenId: BigInt! # uint256
  typeOfCard: Int! # uint8
  base_uuid: String! # string
  base_id: String! # string
  base_baseId: BigInt! # uint32
  base_number: BigInt! # uint32
  base_cardType: Int! # uint8
  base_category: String! # string
  base_rarity: Int! # uint8
  info_name: String! # string
  info_description: String! # string
  info_version: BigInt! # uint32
  info_illustrator: String! # string
  info_medias: String! # string
  info_animationUrl: String! # string
  owner_uuid: String! # string
  owner_owner: Bytes! # address
  attr_alternative: Boolean! # bool
  attr_foil: Boolean! # bool
  extra_element: String! # string
  extra_origin: String! # string
  extra_faction: String! # string
  extra_basePower: BigInt! # uint32
  extra_potential: Int! # uint8
  extra_rank: Int! # uint8
  extra_alternativeCombo: Boolean! # bool
}

type MintedCompletedEvent @entity {
  id: ID!
  caller: Bytes! # address
  tokenId: BigInt! # uint256
  message: String! # string
}

type RegisterMarketPlaceEvent @entity {
  id: ID!
  marketPlaceApprover: Bytes! # address
  isApproved: Boolean! # bool
}

type Transfer @entity {
  id: ID!
  from: Bytes! # address
  to: Bytes! # address
  tokenId: BigInt! # uint256
}

type TransferNftEvent @entity {
  id: ID!
  from: Bytes! # address
  to: Bytes! # address
  tokenId: BigInt! # uint256
}

type UpdateCardEvent @entity {
  id: ID!
  tokenId: BigInt! # uint256
  typeOfCard: Int! # uint8
  base_uuid: String! # string
  base_id: String! # string
  base_baseId: BigInt! # uint32
  base_number: BigInt! # uint32
  base_cardType: Int! # uint8
  base_category: String! # string
  base_rarity: Int! # uint8
  info_name: String! # string
  info_description: String! # string
  info_version: BigInt! # uint32
  info_illustrator: String! # string
  info_medias: String! # string
  info_animationUrl: String! # string
  owner_uuid: String! # string
  owner_owner: Bytes! # address
  attr_alternative: Boolean! # bool
  attr_foil: Boolean! # bool
  extra_element: String! # string
  extra_origin: String! # string
  extra_faction: String! # string
  extra_basePower: BigInt! # uint32
  extra_potential: Int! # uint8
  extra_rank: Int! # uint8
  extra_alternativeCombo: Boolean! # bool
}


type Card @entity {
  id: ID!
  sender: Bytes # address
  tokenId: BigInt # uint256
  typeOfCard: Int # uint8
  base_uuid: String # string
  base_id: String # string
  base_baseId: BigInt # uint32
  base_number: BigInt # uint32
  base_cardType: Int # uint8
  base_category: String # string
  base_rarity: Int # uint8
  info_name: String # string
  info_description: String # string
  info_version: BigInt # uint32
  info_illustrator: String # string
  info_medias: String # string
  info_animationUrl: String # string
  owner_uuid: String # string
  owner_owner: Bytes # address
  attr_alternative: Boolean # bool
  attr_foil: Boolean # bool
  extra_element: String # string
  extra_origin: String # string
  extra_faction: String # string
  extra_basePower: BigInt # uint32
  extra_potential: Int # uint8
  extra_rank: Int # uint8
  extra_alternativeCombo: Boolean # bool
}

